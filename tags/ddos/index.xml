<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ddos on Liangdi&#39;s个人博客</title>
    <link>https://liangdi.me/tags/ddos/</link>
    <description>Recent content in Ddos on Liangdi&#39;s个人博客</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 03 Jun 2022 16:01:32 +0800</lastBuildDate>
    <atom:link href="https://liangdi.me/tags/ddos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rust 黑客编程 - SYN Flood 敲开 DDoS 的大门</title>
      <link>https://liangdi.me/posts/rust-hacking-programing-syn-flood-ddos/</link>
      <pubDate>Fri, 03 Jun 2022 16:01:32 +0800</pubDate>
      <guid>https://liangdi.me/posts/rust-hacking-programing-syn-flood-ddos/</guid>
      <description>&lt;h2 id=&#34;概述&#34;&gt;概述&lt;/h2&gt;&#xA;&lt;p&gt;DDoS 介绍: &lt;a href=&#34;https://www.cloudflare.com/zh-cn/learning/ddos/what-is-a-ddos-attack/&#34;&gt;https://www.cloudflare.com/zh-cn/learning/ddos/what-is-a-ddos-attack/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;如果黑客攻击技术有层次之分, 那么 DDoS 攻击可以比喻为: 花钱请了一堆打手,攻击目标, 没有什么技术含量又有效果,目标也要付出不少成本才能防护的了.&lt;/p&gt;&#xA;&lt;p&gt;那 Rust 能编写 DDoS 软件吗? 答案当然是可以的,基本上所有语言都可以编写.&lt;/p&gt;&#xA;&lt;p&gt;DDoS 工具说到底就是充分利用了网络协议的标准, 然后不讲道理恶意利用而以. 第一个 D, distributed , 分布式, 就不在我们今天内容的范畴了, 后面将结合其他内容一起写.&lt;/p&gt;&#xA;&lt;p&gt;DDoS 攻击大多数发生在 3,4,7 层网络, SYN Flood 就是在 TCP 协议上实现的.&lt;/p&gt;&#xA;&lt;h2 id=&#34;syn-flood-原理&#34;&gt;SYN Flood 原理&lt;/h2&gt;&#xA;&lt;p&gt;SYN Flood 介绍: &lt;a href=&#34;https://www.cloudflare.com/zh-cn/learning/ddos/syn-flood-ddos-attack/&#34;&gt;https://www.cloudflare.com/zh-cn/learning/ddos/syn-flood-ddos-attack/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;SYN 洪水攻击主要是利用 TCP 协议握手规则, 大致就是不停的只伸手, 就不和对方握手,导致对方一直准备着和你握手, 就没法完成其他正常的握手动作了.&lt;/p&gt;&#xA;&lt;p&gt;那丛技术实现原理来看, 就是不停的构建 TCP-SYN 数据包,发给目标 IP 地址, 对于目标响应的 SYN/ACK 信息不做处理, 甚至是伪造发送端 IP ,使得目标将响应的 SYN/ACK 发送到其他 IP 地址去.&lt;/p&gt;&#xA;&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;还是使用 pnet 库 (基于 pcap)&lt;/li&gt;&#xA;&lt;li&gt;尝试伪造 IP (伪造 IP 对于公网 ISP 服务商基本都限制了,可以在内网实现).&lt;/li&gt;&#xA;&lt;li&gt;TCP 协议就不展开讲了.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;编码实现&#34;&gt;编码实现&lt;/h2&gt;&#xA;&lt;p&gt;创建项目, 并且添加基本以来 cargo add 的功能来自 cargo-edit 这个项目, 如果系统没有,可以使用 cargo install cargo-edit 安装该功能&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
